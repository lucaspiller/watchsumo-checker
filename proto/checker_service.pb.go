// Code generated by protoc-gen-go. DO NOT EDIT.
// source: checker_service.proto

package ws_grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_UP      Status = 0
	Status_DOWN    Status = 1
	Status_UNKNOWN Status = 2
)

var Status_name = map[int32]string{
	0: "UP",
	1: "DOWN",
	2: "UNKNOWN",
}

var Status_value = map[string]int32{
	"UP":      0,
	"DOWN":    1,
	"UNKNOWN": 2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3493b4c64b96a37f, []int{0}
}

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_3493b4c64b96a37f, []int{0}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

type CheckerHello struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Country              string   `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckerHello) Reset()         { *m = CheckerHello{} }
func (m *CheckerHello) String() string { return proto.CompactTextString(m) }
func (*CheckerHello) ProtoMessage()    {}
func (*CheckerHello) Descriptor() ([]byte, []int) {
	return fileDescriptor_3493b4c64b96a37f, []int{1}
}

func (m *CheckerHello) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckerHello.Unmarshal(m, b)
}
func (m *CheckerHello) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckerHello.Marshal(b, m, deterministic)
}
func (m *CheckerHello) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckerHello.Merge(m, src)
}
func (m *CheckerHello) XXX_Size() int {
	return xxx_messageInfo_CheckerHello.Size(m)
}
func (m *CheckerHello) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckerHello.DiscardUnknown(m)
}

var xxx_messageInfo_CheckerHello proto.InternalMessageInfo

func (m *CheckerHello) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CheckerHello) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *CheckerHello) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type Header struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_3493b4c64b96a37f, []int{2}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Header) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CheckRequest struct {
	Caller               string                `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	MonitoringId         string                `protobuf:"bytes,2,opt,name=monitoringId,proto3" json:"monitoringId,omitempty"`
	Method               string                `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string                `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Timeout              int32                 `protobuf:"varint,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Options              *CheckRequest_Options `protobuf:"bytes,9,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CheckRequest) Reset()         { *m = CheckRequest{} }
func (m *CheckRequest) String() string { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()    {}
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3493b4c64b96a37f, []int{3}
}

func (m *CheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest.Unmarshal(m, b)
}
func (m *CheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest.Marshal(b, m, deterministic)
}
func (m *CheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest.Merge(m, src)
}
func (m *CheckRequest) XXX_Size() int {
	return xxx_messageInfo_CheckRequest.Size(m)
}
func (m *CheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest proto.InternalMessageInfo

func (m *CheckRequest) GetCaller() string {
	if m != nil {
		return m.Caller
	}
	return ""
}

func (m *CheckRequest) GetMonitoringId() string {
	if m != nil {
		return m.MonitoringId
	}
	return ""
}

func (m *CheckRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *CheckRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CheckRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *CheckRequest) GetOptions() *CheckRequest_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

type CheckRequest_Options struct {
	GetFallback          bool     `protobuf:"varint,1,opt,name=getFallback,proto3" json:"getFallback,omitempty"`
	IgnoreTlsErrors      bool     `protobuf:"varint,2,opt,name=ignoreTlsErrors,proto3" json:"ignoreTlsErrors,omitempty"`
	FollowRedirects      bool     `protobuf:"varint,3,opt,name=followRedirects,proto3" json:"followRedirects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRequest_Options) Reset()         { *m = CheckRequest_Options{} }
func (m *CheckRequest_Options) String() string { return proto.CompactTextString(m) }
func (*CheckRequest_Options) ProtoMessage()    {}
func (*CheckRequest_Options) Descriptor() ([]byte, []int) {
	return fileDescriptor_3493b4c64b96a37f, []int{3, 0}
}

func (m *CheckRequest_Options) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest_Options.Unmarshal(m, b)
}
func (m *CheckRequest_Options) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest_Options.Marshal(b, m, deterministic)
}
func (m *CheckRequest_Options) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest_Options.Merge(m, src)
}
func (m *CheckRequest_Options) XXX_Size() int {
	return xxx_messageInfo_CheckRequest_Options.Size(m)
}
func (m *CheckRequest_Options) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest_Options.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest_Options proto.InternalMessageInfo

func (m *CheckRequest_Options) GetGetFallback() bool {
	if m != nil {
		return m.GetFallback
	}
	return false
}

func (m *CheckRequest_Options) GetIgnoreTlsErrors() bool {
	if m != nil {
		return m.IgnoreTlsErrors
	}
	return false
}

func (m *CheckRequest_Options) GetFollowRedirects() bool {
	if m != nil {
		return m.FollowRedirects
	}
	return false
}

type CheckResponse struct {
	Caller       string `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	MonitoringId string `protobuf:"bytes,2,opt,name=monitoringId,proto3" json:"monitoringId,omitempty"`
	//string regionId = 3;
	Status               Status                     `protobuf:"varint,4,opt,name=status,proto3,enum=ws.grpc.Status" json:"status,omitempty"`
	Method               string                     `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string                     `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	StatusCode           int32                      `protobuf:"varint,7,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Headers              []*Header                  `protobuf:"bytes,8,rep,name=headers,proto3" json:"headers,omitempty"`
	Body                 string                     `protobuf:"bytes,9,opt,name=body,proto3" json:"body,omitempty"`
	Time                 int32                      `protobuf:"varint,10,opt,name=time,proto3" json:"time,omitempty"`
	Certificate          *CheckResponse_Certificate `protobuf:"bytes,11,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Timing               *CheckResponse_Timing      `protobuf:"bytes,12,opt,name=timing,proto3" json:"timing,omitempty"`
	Error                string                     `protobuf:"bytes,14,opt,name=error,proto3" json:"error,omitempty"`
	Timestamp            string                     `protobuf:"bytes,15,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Proto                string                     `protobuf:"bytes,16,opt,name=proto,proto3" json:"proto,omitempty"`
	StatusText           string                     `protobuf:"bytes,17,opt,name=statusText,proto3" json:"statusText,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CheckResponse) Reset()         { *m = CheckResponse{} }
func (m *CheckResponse) String() string { return proto.CompactTextString(m) }
func (*CheckResponse) ProtoMessage()    {}
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3493b4c64b96a37f, []int{4}
}

func (m *CheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResponse.Unmarshal(m, b)
}
func (m *CheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResponse.Marshal(b, m, deterministic)
}
func (m *CheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResponse.Merge(m, src)
}
func (m *CheckResponse) XXX_Size() int {
	return xxx_messageInfo_CheckResponse.Size(m)
}
func (m *CheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResponse proto.InternalMessageInfo

func (m *CheckResponse) GetCaller() string {
	if m != nil {
		return m.Caller
	}
	return ""
}

func (m *CheckResponse) GetMonitoringId() string {
	if m != nil {
		return m.MonitoringId
	}
	return ""
}

func (m *CheckResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UP
}

func (m *CheckResponse) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *CheckResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CheckResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *CheckResponse) GetHeaders() []*Header {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *CheckResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *CheckResponse) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *CheckResponse) GetCertificate() *CheckResponse_Certificate {
	if m != nil {
		return m.Certificate
	}
	return nil
}

func (m *CheckResponse) GetTiming() *CheckResponse_Timing {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *CheckResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CheckResponse) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *CheckResponse) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *CheckResponse) GetStatusText() string {
	if m != nil {
		return m.StatusText
	}
	return ""
}

type CheckResponse_Certificate struct {
	SerialString         string   `protobuf:"bytes,1,opt,name=serialString,proto3" json:"serialString,omitempty"`
	Algorithm            int32    `protobuf:"varint,2,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	ValidFrom            string   `protobuf:"bytes,3,opt,name=validFrom,proto3" json:"validFrom,omitempty"`
	ValidTo              string   `protobuf:"bytes,4,opt,name=validTo,proto3" json:"validTo,omitempty"`
	Subject              string   `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Issuer               string   `protobuf:"bytes,6,opt,name=issuer,proto3" json:"issuer,omitempty"`
	FingerprintSHA256    []byte   `protobuf:"bytes,7,opt,name=fingerprintSHA256,proto3" json:"fingerprintSHA256,omitempty"`
	Serial               []byte   `protobuf:"bytes,8,opt,name=serial,proto3" json:"serial,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckResponse_Certificate) Reset()         { *m = CheckResponse_Certificate{} }
func (m *CheckResponse_Certificate) String() string { return proto.CompactTextString(m) }
func (*CheckResponse_Certificate) ProtoMessage()    {}
func (*CheckResponse_Certificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3493b4c64b96a37f, []int{4, 0}
}

func (m *CheckResponse_Certificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResponse_Certificate.Unmarshal(m, b)
}
func (m *CheckResponse_Certificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResponse_Certificate.Marshal(b, m, deterministic)
}
func (m *CheckResponse_Certificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResponse_Certificate.Merge(m, src)
}
func (m *CheckResponse_Certificate) XXX_Size() int {
	return xxx_messageInfo_CheckResponse_Certificate.Size(m)
}
func (m *CheckResponse_Certificate) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResponse_Certificate.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResponse_Certificate proto.InternalMessageInfo

func (m *CheckResponse_Certificate) GetSerialString() string {
	if m != nil {
		return m.SerialString
	}
	return ""
}

func (m *CheckResponse_Certificate) GetAlgorithm() int32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *CheckResponse_Certificate) GetValidFrom() string {
	if m != nil {
		return m.ValidFrom
	}
	return ""
}

func (m *CheckResponse_Certificate) GetValidTo() string {
	if m != nil {
		return m.ValidTo
	}
	return ""
}

func (m *CheckResponse_Certificate) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *CheckResponse_Certificate) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *CheckResponse_Certificate) GetFingerprintSHA256() []byte {
	if m != nil {
		return m.FingerprintSHA256
	}
	return nil
}

func (m *CheckResponse_Certificate) GetSerial() []byte {
	if m != nil {
		return m.Serial
	}
	return nil
}

type CheckResponse_Timing struct {
	Dns                  int32    `protobuf:"varint,1,opt,name=dns,proto3" json:"dns,omitempty"`
	Connecting           int32    `protobuf:"varint,2,opt,name=connecting,proto3" json:"connecting,omitempty"`
	Tls                  int32    `protobuf:"varint,3,opt,name=tls,proto3" json:"tls,omitempty"`
	Sending              int32    `protobuf:"varint,4,opt,name=sending,proto3" json:"sending,omitempty"`
	Waiting              int32    `protobuf:"varint,5,opt,name=waiting,proto3" json:"waiting,omitempty"`
	Receiving            int32    `protobuf:"varint,6,opt,name=receiving,proto3" json:"receiving,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckResponse_Timing) Reset()         { *m = CheckResponse_Timing{} }
func (m *CheckResponse_Timing) String() string { return proto.CompactTextString(m) }
func (*CheckResponse_Timing) ProtoMessage()    {}
func (*CheckResponse_Timing) Descriptor() ([]byte, []int) {
	return fileDescriptor_3493b4c64b96a37f, []int{4, 1}
}

func (m *CheckResponse_Timing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResponse_Timing.Unmarshal(m, b)
}
func (m *CheckResponse_Timing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResponse_Timing.Marshal(b, m, deterministic)
}
func (m *CheckResponse_Timing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResponse_Timing.Merge(m, src)
}
func (m *CheckResponse_Timing) XXX_Size() int {
	return xxx_messageInfo_CheckResponse_Timing.Size(m)
}
func (m *CheckResponse_Timing) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResponse_Timing.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResponse_Timing proto.InternalMessageInfo

func (m *CheckResponse_Timing) GetDns() int32 {
	if m != nil {
		return m.Dns
	}
	return 0
}

func (m *CheckResponse_Timing) GetConnecting() int32 {
	if m != nil {
		return m.Connecting
	}
	return 0
}

func (m *CheckResponse_Timing) GetTls() int32 {
	if m != nil {
		return m.Tls
	}
	return 0
}

func (m *CheckResponse_Timing) GetSending() int32 {
	if m != nil {
		return m.Sending
	}
	return 0
}

func (m *CheckResponse_Timing) GetWaiting() int32 {
	if m != nil {
		return m.Waiting
	}
	return 0
}

func (m *CheckResponse_Timing) GetReceiving() int32 {
	if m != nil {
		return m.Receiving
	}
	return 0
}

func init() {
	proto.RegisterEnum("ws.grpc.Status", Status_name, Status_value)
	proto.RegisterType((*Void)(nil), "ws.grpc.Void")
	proto.RegisterType((*CheckerHello)(nil), "ws.grpc.CheckerHello")
	proto.RegisterType((*Header)(nil), "ws.grpc.Header")
	proto.RegisterType((*CheckRequest)(nil), "ws.grpc.CheckRequest")
	proto.RegisterType((*CheckRequest_Options)(nil), "ws.grpc.CheckRequest.Options")
	proto.RegisterType((*CheckResponse)(nil), "ws.grpc.CheckResponse")
	proto.RegisterType((*CheckResponse_Certificate)(nil), "ws.grpc.CheckResponse.Certificate")
	proto.RegisterType((*CheckResponse_Timing)(nil), "ws.grpc.CheckResponse.Timing")
}

func init() { proto.RegisterFile("checker_service.proto", fileDescriptor_3493b4c64b96a37f) }

var fileDescriptor_3493b4c64b96a37f = []byte{
	// 777 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x4d, 0x6f, 0x23, 0x45,
	0x10, 0xcd, 0x38, 0xf6, 0x8c, 0x5d, 0xf6, 0x3a, 0xde, 0x16, 0x59, 0xb5, 0x2c, 0x40, 0xd6, 0x5c,
	0xd6, 0x20, 0x64, 0x2d, 0x46, 0x0b, 0x12, 0x37, 0x94, 0x65, 0x15, 0x04, 0x4a, 0x50, 0xdb, 0x81,
	0x23, 0x1a, 0xcf, 0x54, 0xec, 0x26, 0xed, 0x69, 0xd3, 0xdd, 0xe3, 0x90, 0x53, 0x7e, 0x08, 0x12,
	0xbf, 0x87, 0x7f, 0x05, 0xea, 0x0f, 0xdb, 0x93, 0xe0, 0xdb, 0xde, 0xe6, 0xbd, 0xaa, 0x6e, 0x57,
	0xbd, 0x7a, 0xd5, 0x86, 0xf3, 0x7c, 0x85, 0xf9, 0x1d, 0xaa, 0xdf, 0x34, 0xaa, 0x2d, 0xcf, 0x71,
	0xb2, 0x51, 0xd2, 0x48, 0x92, 0xdc, 0xeb, 0xc9, 0x52, 0x6d, 0xf2, 0x34, 0x86, 0xe6, 0x2f, 0x92,
	0x17, 0xe9, 0x1c, 0x7a, 0x17, 0x3e, 0xf3, 0x12, 0x85, 0x90, 0xa4, 0x0f, 0x0d, 0x5e, 0xd0, 0x68,
	0x14, 0x8d, 0x3b, 0xac, 0xc1, 0x0b, 0x32, 0x84, 0xb6, 0x90, 0x79, 0x66, 0xb8, 0x2c, 0x69, 0xc3,
	0xb1, 0x7b, 0x4c, 0x28, 0x24, 0xb9, 0xac, 0x4a, 0xa3, 0x1e, 0xe8, 0xa9, 0x0b, 0xed, 0x60, 0xfa,
	0x06, 0xe2, 0x4b, 0xcc, 0x0a, 0x54, 0x64, 0x00, 0xa7, 0x77, 0xf8, 0x10, 0x2e, 0xb4, 0x9f, 0xe4,
	0x23, 0x68, 0x6d, 0x33, 0x51, 0x61, 0xb8, 0xce, 0x83, 0xf4, 0x9f, 0x46, 0x28, 0x84, 0xe1, 0x1f,
	0x15, 0x6a, 0x43, 0x5e, 0x41, 0x9c, 0x67, 0x42, 0xa0, 0x0a, 0x67, 0x03, 0x22, 0x29, 0xf4, 0xd6,
	0xb2, 0xe4, 0x46, 0x2a, 0x5e, 0x2e, 0x7f, 0x28, 0xc2, 0x2d, 0x4f, 0x38, 0x7b, 0x76, 0x8d, 0x66,
	0x25, 0x8b, 0x50, 0x57, 0x40, 0xb6, 0x98, 0x4a, 0x09, 0xda, 0xf4, 0xc5, 0x54, 0x4a, 0xd8, 0x16,
	0x0c, 0x5f, 0xa3, 0xac, 0x0c, 0x4d, 0x46, 0xd1, 0xb8, 0xc5, 0x76, 0x90, 0x7c, 0x03, 0x89, 0xdc,
	0xd8, 0x36, 0x35, 0xed, 0x8c, 0xa2, 0x71, 0x77, 0xfa, 0xc9, 0x24, 0x68, 0x37, 0xa9, 0xd7, 0x39,
	0xb9, 0xf6, 0x49, 0x6c, 0x97, 0x3d, 0x7c, 0x84, 0x24, 0x70, 0x64, 0x04, 0xdd, 0x25, 0x9a, 0xf7,
	0x99, 0x10, 0x8b, 0x2c, 0xbf, 0x73, 0x8d, 0xb4, 0x59, 0x9d, 0x22, 0x63, 0x38, 0xe3, 0xcb, 0x52,
	0x2a, 0x9c, 0x0b, 0xfd, 0xbd, 0x52, 0x52, 0x69, 0xd7, 0x50, 0x9b, 0x3d, 0xa7, 0x6d, 0xe6, 0xad,
	0x14, 0x42, 0xde, 0x33, 0x2c, 0xb8, 0xc2, 0xdc, 0x68, 0xd7, 0x5c, 0x9b, 0x3d, 0xa7, 0xd3, 0xbf,
	0x12, 0x78, 0x11, 0x4a, 0xd4, 0x1b, 0x59, 0x6a, 0xfc, 0x20, 0x2d, 0x5f, 0x43, 0xac, 0x4d, 0x66,
	0x2a, 0xed, 0x64, 0xeb, 0x4f, 0xcf, 0xf6, 0x32, 0xcc, 0x1c, 0xcd, 0x42, 0xb8, 0x26, 0x7a, 0xeb,
	0x98, 0xe8, 0xf1, 0x41, 0xf4, 0x4f, 0x01, 0xfc, 0x99, 0x0b, 0x59, 0x60, 0xd0, 0xbd, 0xc6, 0x90,
	0xcf, 0x20, 0x59, 0x39, 0xf7, 0x68, 0xda, 0x1e, 0x9d, 0x8e, 0xbb, 0xb5, 0xdf, 0xf4, 0xae, 0x62,
	0xbb, 0x38, 0x21, 0xd0, 0x5c, 0xc8, 0xe2, 0xc1, 0x8d, 0xa8, 0xc3, 0xdc, 0xb7, 0xe5, 0xec, 0x10,
	0x29, 0xb8, 0x8b, 0xdd, 0x37, 0x79, 0x07, 0xdd, 0x1c, 0x95, 0xe1, 0xb7, 0x3c, 0xcf, 0x0c, 0xd2,
	0xae, 0x9b, 0x68, 0xfa, 0x7c, 0xa2, 0x5e, 0xae, 0xc9, 0xc5, 0x21, 0x93, 0xd5, 0x8f, 0x91, 0xb7,
	0x10, 0x1b, 0xbe, 0xe6, 0xe5, 0x92, 0xf6, 0x8e, 0x5b, 0x22, 0x5c, 0x30, 0x77, 0x49, 0x2c, 0x24,
	0x5b, 0xc7, 0xa3, 0x1d, 0x22, 0xed, 0x7b, 0xc7, 0x3b, 0x40, 0x3e, 0x86, 0x8e, 0x2d, 0x4d, 0x9b,
	0x6c, 0xbd, 0xa1, 0x67, 0x2e, 0x72, 0x20, 0xec, 0x19, 0xb7, 0xb1, 0x74, 0xe0, 0xcf, 0xf8, 0xf5,
	0xdd, 0x2b, 0x37, 0xc7, 0x3f, 0x0d, 0x7d, 0xe9, 0x42, 0x35, 0x66, 0xf8, 0x6f, 0x04, 0xdd, 0x5a,
	0xf5, 0x76, 0xc0, 0x1a, 0x15, 0xcf, 0xc4, 0xcc, 0xd8, 0x71, 0x86, 0xf1, 0x3f, 0xe1, 0x6c, 0x1d,
	0x99, 0x58, 0x4a, 0xc5, 0xcd, 0x6a, 0xed, 0x1c, 0xd0, 0x62, 0x07, 0xc2, 0x46, 0xb7, 0x99, 0xe0,
	0xc5, 0x7b, 0x25, 0xd7, 0x61, 0x9b, 0x0e, 0x84, 0x5d, 0x1f, 0x07, 0xe6, 0x32, 0x2c, 0xd5, 0x0e,
	0xda, 0x88, 0xae, 0x16, 0xbf, 0x63, 0x6e, 0x82, 0x1d, 0x76, 0xd0, 0xfa, 0x84, 0x6b, 0x5d, 0xa1,
	0x0a, 0x96, 0x08, 0x88, 0x7c, 0x01, 0x2f, 0x6f, 0x79, 0xb9, 0x44, 0xb5, 0x51, 0xbc, 0x34, 0xb3,
	0xcb, 0xef, 0xa6, 0x6f, 0xbf, 0x76, 0xe6, 0xe8, 0xb1, 0xff, 0x07, 0xec, 0x2d, 0xbe, 0x0b, 0xda,
	0x76, 0x29, 0x01, 0x0d, 0xff, 0x8e, 0x20, 0xf6, 0xf2, 0x5b, 0xe3, 0x15, 0xa5, 0x76, 0x3d, 0xb7,
	0x98, 0xfd, 0xb4, 0xf2, 0xe5, 0xb2, 0x2c, 0x31, 0x37, 0x56, 0x0c, 0xdf, 0x6b, 0x8d, 0xb1, 0x27,
	0x8c, 0xf0, 0x7b, 0xd5, 0x62, 0xf6, 0xd3, 0xb5, 0x81, 0x65, 0x61, 0xd3, 0x9b, 0xfe, 0x7d, 0x08,
	0xd0, 0x46, 0xee, 0x33, 0xee, 0x2e, 0x6a, 0xf9, 0x48, 0x80, 0x56, 0x32, 0x85, 0x39, 0xf2, 0xad,
	0x8d, 0xc5, 0x5e, 0xd0, 0x3d, 0xf1, 0xf9, 0x6b, 0x88, 0xfd, 0xe2, 0x90, 0x18, 0x1a, 0x37, 0x3f,
	0x0f, 0x4e, 0x48, 0x1b, 0x9a, 0xef, 0xae, 0x7f, 0xbd, 0x1a, 0x44, 0xa4, 0x0b, 0xc9, 0xcd, 0xd5,
	0x8f, 0x57, 0x16, 0x34, 0xa6, 0x8f, 0xd0, 0x0f, 0x2f, 0xf3, 0xcc, 0x3f, 0xe1, 0xe4, 0x5b, 0x88,
	0x7f, 0xe2, 0xda, 0x60, 0x49, 0xce, 0x9f, 0x1a, 0x2f, 0x3c, 0xde, 0xc3, 0xf3, 0xa3, 0x4f, 0x54,
	0x7a, 0xf2, 0x26, 0x22, 0x5f, 0x42, 0xcc, 0x50, 0x57, 0xc2, 0x90, 0x57, 0xc7, 0x4d, 0x3b, 0x7c,
	0xb1, 0xe7, 0xdd, 0x1f, 0xc3, 0xc9, 0x22, 0x76, 0x9e, 0xfb, 0xea, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x4b, 0x79, 0xa4, 0x83, 0x4b, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CheckerServiceClient is the client API for CheckerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckerServiceClient interface {
	Listen(ctx context.Context, in *CheckerHello, opts ...grpc.CallOption) (CheckerService_ListenClient, error)
	Result(ctx context.Context, in *CheckResponse, opts ...grpc.CallOption) (*Void, error)
}

type checkerServiceClient struct {
	cc *grpc.ClientConn
}

func NewCheckerServiceClient(cc *grpc.ClientConn) CheckerServiceClient {
	return &checkerServiceClient{cc}
}

func (c *checkerServiceClient) Listen(ctx context.Context, in *CheckerHello, opts ...grpc.CallOption) (CheckerService_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CheckerService_serviceDesc.Streams[0], "/ws.grpc.CheckerService/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &checkerServiceListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CheckerService_ListenClient interface {
	Recv() (*CheckRequest, error)
	grpc.ClientStream
}

type checkerServiceListenClient struct {
	grpc.ClientStream
}

func (x *checkerServiceListenClient) Recv() (*CheckRequest, error) {
	m := new(CheckRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *checkerServiceClient) Result(ctx context.Context, in *CheckResponse, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/ws.grpc.CheckerService/Result", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckerServiceServer is the server API for CheckerService service.
type CheckerServiceServer interface {
	Listen(*CheckerHello, CheckerService_ListenServer) error
	Result(context.Context, *CheckResponse) (*Void, error)
}

// UnimplementedCheckerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCheckerServiceServer struct {
}

func (*UnimplementedCheckerServiceServer) Listen(req *CheckerHello, srv CheckerService_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}
func (*UnimplementedCheckerServiceServer) Result(ctx context.Context, req *CheckResponse) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Result not implemented")
}

func RegisterCheckerServiceServer(s *grpc.Server, srv CheckerServiceServer) {
	s.RegisterService(&_CheckerService_serviceDesc, srv)
}

func _CheckerService_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CheckerHello)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CheckerServiceServer).Listen(m, &checkerServiceListenServer{stream})
}

type CheckerService_ListenServer interface {
	Send(*CheckRequest) error
	grpc.ServerStream
}

type checkerServiceListenServer struct {
	grpc.ServerStream
}

func (x *checkerServiceListenServer) Send(m *CheckRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _CheckerService_Result_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckerServiceServer).Result(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ws.grpc.CheckerService/Result",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckerServiceServer).Result(ctx, req.(*CheckResponse))
	}
	return interceptor(ctx, in, info, handler)
}

var _CheckerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ws.grpc.CheckerService",
	HandlerType: (*CheckerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Result",
			Handler:    _CheckerService_Result_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _CheckerService_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "checker_service.proto",
}
